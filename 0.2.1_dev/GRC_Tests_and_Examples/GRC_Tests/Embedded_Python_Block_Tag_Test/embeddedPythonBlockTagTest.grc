options:
  parameters:
    author: ''
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: embeddedPythonBlockTagTest
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Embedded Python Block Tag Test
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [737, 218]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 32e3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [935, 228]
    rotation: 0
    state: true
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: '1000'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    type: float
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [468, 363]
    rotation: 0
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [663, 402]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):\n    def __init__(self):\n\n        self.valueCounter\
      \ = 0 # Initial value for the tag\n        gr.sync_block.__init__(\n       \
      \     self,\n            name='Tagger',\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32],  \n        )\n        \n\n    def work(self,\
      \ input_items, output_items):\n        for indx, sample in enumerate(input_items[0]):\
      \ # Enumerate through the input samples in port in0\n            if np.random.rand()\
      \ > 0.999: # 0.1% chance this sample is chosen\n                key = pmt.intern(\"\
      example_key\")\n                #value = pmt.intern(\"example_value\")\n   \
      \             value = pmt.to_pmt(self.valueCounter)\n                self.valueCounter\
      \ = self.valueCounter + 1\n                self.add_item_tag(0, # Write to output\
      \ port 0\n                        self.nitems_written(0) + indx, # Index of\
      \ the tag in absolute terms\n                        key, # Key of the tag\n\
      \                        value # Value of the tag\n                )\n     \
      \           # note: (self.nitems_written(0) + indx) is our current sample, in\
      \ absolute time\n        output_items[0][:] = input_items[0] # copy input to\
      \ output\n        return len(output_items[0])"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Tagger', 'blk', [], [('0', 'float', 1)], [('0', 'float', 1)], '',
      [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [850, 406]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):\n    def __init__(self):\n        gr.sync_block.__init__(self,name='Read\
      \ Tags', in_sig=[np.float32], out_sig=None)\n\n    def work(self, input_items,\
      \ output_items):\n        tags = self.get_tags_in_window(0, # which input\n\
      \        0, # relative start\n        len(input_items[0]) # relative end\n \
      \       )\n        for tag in tags:\n            key = pmt.to_python(tag.key)\
      \ # convert from PMT to python string\n            value = pmt.to_python(tag.value)\
      \ # Note that the type(value) can be several things, it depends what PMT type\
      \ it was\n            print ('key:', key)\n            print ('value:', value,\
      \ type(value))\n            print ('')\n        return len(input_items[0])"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Read Tags', 'blk', [], [('0', 'float', 1)], [], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1016, 539]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1007, 386]
    rotation: 0
    state: true

connections:
- [analog_sig_source_x_0, '0', blocks_throttle_0, '0']
- [blocks_throttle_0, '0', epy_block_0, '0']
- [epy_block_0, '0', epy_block_1, '0']
- [epy_block_0, '0', qtgui_time_sink_x_0, '0']

metadata:
  file_format: 1
